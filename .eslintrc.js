/* eslint-disable comma-dangle */
module.exports = {
  root: true,

  plugins: ["node"],

  parserOptions: {
    sourceType: "module",
    ecmaVersion: 2018,
  },

  env: {
    mocha: true,
    node: true
  },

  /*
    Keeping the existing ESLint rules from `eslint-plugin-zero-config` for now to maintain stability.
    We'll revisit this in the future to adopt more modern presets.
  */

  rules: {
    // https://github.com/Exelord/eslint-plugin-zero-config/blob/master/lib/configs/-private/node/index.js
    "node/callback-return": "error",
    "node/exports-style": "error",
    "node/file-extension-in-import": "error",
    "node/global-require": "error",
    "node/handle-callback-err": "error",
    "node/no-callback-literal": "error",
    "node/no-deprecated-api": "error",
    "node/no-exports-assign": "error",
    "node/no-extraneous-import": "error",
    "node/no-extraneous-require": "error",
    "node/no-hide-core-modules": "error",
    "node/no-missing-import": "error",
    "node/no-missing-require": "error",
    "node/no-mixed-requires": "error",
    "node/no-new-require": "error",
    "node/no-path-concat": "error",
    "node/no-process-env": "off",
    "node/no-process-exit": "error",
    "node/no-restricted-import": "error",
    "node/no-restricted-require": "error",
    "node/no-sync": "error",
    "node/no-unpublished-bin": "error",
    "node/no-unpublished-import": "error",
    "node/no-unpublished-require": "off",
    "node/no-unsupported-features": "error",
    "node/process-exit-as-throw": "error",
    "node/shebang": "error",

    // https://github.com/Exelord/eslint-plugin-zero-config/blob/master/lib/configs/-private/eslint/best-practices.js
    "accessor-pairs": "error",
    "array-callback-return": "error",
    "block-scoped-var": "error",
    complexity: "error",
    curly: ["error", "multi-line"],
    "default-case": "error",
    "default-case-last": "error",
    "dot-location": ["error", "property"],
    "dot-notation": "error",
    eqeqeq: "error",
    "guard-for-in": "error",
    "no-caller": "error",
    "no-div-regex": "error",
    "no-else-return": "error",
    "no-eq-null": "error",
    "no-eval": "error",
    "no-extend-native": "error",
    "no-extra-bind": "error",
    "no-extra-label": "error",
    "no-floating-decimal": "error",
    "no-implicit-coercion": "error",
    "no-implicit-globals": "error",
    "no-implied-eval": "error",
    "no-iterator": "error",
    "no-labels": "error",
    "no-lone-blocks": "error",
    "no-loop-func": "error",
    "no-multi-spaces": "error",
    "no-multi-str": "error",
    "no-new": "error",
    "no-new-func": "error",
    "no-new-wrappers": "error",
    "no-nonoctal-decimal-escape": "error",
    "no-octal-escape": "error",
    "no-proto": "error",
    "no-restricted-properties": "error",
    "no-return-await": "error",
    "no-script-url": "error",
    "no-self-compare": "error",
    "no-sequences": "error",
    "no-throw-literal": "error",
    "no-unmodified-loop-condition": "error",
    "no-unused-expressions": "error",
    "no-useless-call": "error",
    "no-useless-concat": "error",
    "no-useless-return": "error",
    "no-void": "error",
    "prefer-named-capture-group": "error",
    "prefer-promise-reject-errors": "error",
    radix: "error",
    "require-unicode-regexp": "error",
    "vars-on-top": "error",
    "wrap-iife": "error",
    yoda: "error",
    "default-param-last": "error",
    "grouped-accessor-pairs": ["error", "getBeforeSet"],
    "no-constructor-return": "error",
    "prefer-regex-literals": "error",

    "class-methods-use-this": "off",
    "consistent-return": "off",
    "max-classes-per-file": "off",
    "no-alert": "off",
    "no-empty-function": "off",
    "no-invalid-this": "off",
    "no-magic-numbers": "off",
    "no-param-reassign": "off",
    "no-return-assign": "off",
    "no-warning-comments": "off",
    "require-await": "off",

    // https://github.com/Exelord/eslint-plugin-zero-config/blob/master/lib/configs/-private/eslint/es6.js
    "arrow-body-style": ["error", "as-needed"],
    "arrow-parens": "error",
    "arrow-spacing": "error",
    "generator-star-spacing": "error",
    "no-confusing-arrow": ["error", { allowParens: true }],
    "no-duplicate-imports": "error",
    "no-useless-computed-key": "error",
    "no-useless-constructor": "error",
    "no-useless-rename": "error",
    "no-var": "error",
    "object-shorthand": "error",
    "prefer-const": "error",
    "prefer-destructuring": [
      "error",
      {
        VariableDeclarator: {
          array: true,
          object: true,
        },
        AssignmentExpression: {
          array: false,
          object: true,
        },
      },
      {
        enforceForRenamedProperties: false,
      },
    ],
    "prefer-numeric-literals": "error",
    "prefer-spread": "error",
    "prefer-template": "error",
    "rest-spread-spacing": "error",
    "symbol-description": "error",
    "template-curly-spacing": "error",
    "yield-star-spacing": "error",
    "no-new-symbol": "error",
    "no-restricted-exports": "error",
    "no-restricted-imports": "off",
    "prefer-arrow-callback": "off",
    "prefer-rest-params": "off",
    "sort-imports": "off",

    // https://github.com/Exelord/eslint-plugin-zero-config/blob/master/lib/configs/-private/eslint/possible-errors.js
    "no-await-in-loop": "error",
    "no-console": "error",
    "no-extra-parens": ["error", "all", { enforceForArrowConditionals: false }],
    "no-template-curly-in-string": "error",
    "no-extra-semi": "error",
    "no-inner-declarations": "error",
    "no-unreachable-loop": "error",
    "require-atomic-updates": "error",

    // https://github.com/Exelord/eslint-plugin-zero-config/blob/master/lib/configs/-private/eslint/strict-mode.js
    strict: 'error',

    // https://github.com/Exelord/eslint-plugin-zero-config/blob/master/lib/configs/-private/eslint/stylistic-issues.js
    'array-bracket-newline': ['error', 'consistent'],
    'array-bracket-spacing': 'error',
    'array-element-newline': ['error', 'consistent'],
    'block-spacing': 'error',
    'brace-style': ['error', '1tbs', { allowSingleLine: true }],
    camelcase: ['error', { properties: 'never', ignoreDestructuring: true }],
    'comma-dangle': ['error', 'never'],
    'comma-spacing': 'error',
    'comma-style': 'error',
    'computed-property-spacing': 'error',
    'consistent-this': ['error', 'self'],
    'eol-last': 'error',
    'func-call-spacing': 'error',
    'func-name-matching': 'error',
    'func-style': ['error', 'declaration', { allowArrowFunctions: true }],
    'function-paren-newline': ['error', 'consistent'],
    'implicit-arrow-linebreak': 'error',
    indent: ['error', 2],
    'jsx-quotes': 'error',
    'key-spacing': 'error',
    'keyword-spacing': 'error',
    'linebreak-style': 'error',
    'lines-between-class-members': 'error',
    'max-depth': 'error',
    'max-len': ['error', { code: 120 }],
    'max-lines': ['error', { skipComments: true, skipBlankLines: true }],
    'max-lines-per-function': [
      'error',
      { skipComments: true, skipBlankLines: true }
    ],
    'max-nested-callbacks': 'error',
    'max-params': ['error', { max: 5 }],
    'max-statements': ['error', 15, { ignoreTopLevelFunctions: true }],
    'max-statements-per-line': 'error',
    'multiline-ternary': ['error', 'never'],
    'new-cap': ['error', { properties: false }],
    'new-parens': 'error',
    'newline-per-chained-call': ['error', { ignoreChainWithDepth: 3 }],
    'no-array-constructor': 'error',
    'no-bitwise': 'error',
    'no-lonely-if': 'error',
    'no-multi-assign': 'error',
    'no-multiple-empty-lines': ['error', { max: 1, maxBOF: 0, maxEOF: 1 }],
    'no-negated-condition': 'error',
    'no-nested-ternary': 'error',
    'no-new-object': 'error',
    'no-plusplus': ['error', { allowForLoopAfterthoughts: true }],
    'no-promise-executor-return': 'error',
    'no-tabs': 'error',
    'no-trailing-spaces': 'error',
    'no-unneeded-ternary': 'error',
    'no-whitespace-before-property': 'error',
    'nonblock-statement-body-position': 'error',
    'object-curly-newline': [
      'error',
      {
        ObjectExpression: { consistent: true },
        ObjectPattern: { consistent: true },
        ImportDeclaration: { multiline: true },
        ExportDeclaration: { multiline: true, minProperties: 3 }
      }
    ],
    'object-curly-spacing': ['error', 'always'],
    'one-var': ['error', 'never'],
    'one-var-declaration-per-line': 'error',
    'operator-assignment': 'error',
    'operator-linebreak': ['error', 'after'],
    'padded-blocks': ['error', 'never'],
    'padding-line-between-statements': [
      'error',
      { blankLine: 'always', prev: '*', next: 'return' },
      { blankLine: 'always', prev: 'block-like', next: '*' },

      { blankLine: 'always', prev: 'expression', next: '*' },
      { blankLine: 'any', prev: 'expression', next: 'expression' },

      { blankLine: 'always', prev: ['const', 'let', 'var'], next: '*' },
      {
        blankLine: 'any',
        prev: ['const', 'let', 'var'],
        next: ['const', 'let', 'var']
      },

      { blankLine: 'always', prev: 'directive', next: '*' },
      { blankLine: 'any', prev: 'directive', next: 'directive' },

      {
        blankLine: 'always',
        prev: ['multiline-const', 'multiline-let', 'multiline-var'],
        next: '*'
      },
      {
        blankLine: 'always',
        prev: ['multiline-expression', 'multiline-block-like'],
        next: '*'
      }
    ],
    'prefer-object-spread': 'error',
    'quote-props': ['error', 'as-needed'],
    quotes: [
      'error',
      'single',
      { avoidEscape: true, allowTemplateLiterals: true }
    ],
    semi: 'error',
    'semi-spacing': 'error',
    'semi-style': 'error',
    'space-before-blocks': 'error',
    'space-before-function-paren': ['error', 'never'],
    'space-in-parens': 'error',
    'space-infix-ops': 'error',
    'space-unary-ops': 'error',
    'spaced-comment': 'error',
    'switch-colon-spacing': 'error',
    'template-tag-spacing': 'error',
    'unicode-bom': 'error',
    'wrap-regex': 'error',
    'no-mixed-spaces-and-tabs': 'error',
    'prefer-exponentiation-operator': 'error',

    'capitalized-comments': 'off',
    'func-names': 'off',
    'id-denylist': 'off',
    'id-length': 'off',
    'id-match': 'error',
    'line-comment-position': 'off',
    'lines-around-comment': 'off',
    'multiline-comment-style': 'off',
    'no-continue': 'off',
    'no-inline-comments': 'off',
    'no-mixed-operators': 'off',
    'no-restricted-syntax': 'off',
    'no-ternary': 'off',
    'no-underscore-dangle': 'off',
    'object-property-newline': 'off',
    'sort-keys': 'off',
    'sort-vars': 'off',
    'function-call-argument-newline': 'off',

    // https://github.com/Exelord/eslint-plugin-zero-config/blob/master/lib/configs/-private/eslint/variables.js
    "no-label-var": "error",
    "no-shadow": "error",
    "no-undef-init": "error",
    "no-use-before-define": ["error", { functions: false }],
    "init-declarations": "off",
    "no-undefined": "off",
    "no-restricted-globals": "off",
  },

  overrides: [
    // JSON files
    {
      files: ["**/*.json"],
      plugins: ["json"],
      extends: ["plugin:json/recommended"],
    },
  ],
};
